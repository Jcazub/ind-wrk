<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop  
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <!-- Bean definitions go here -->
   <bean id="userIO" class="com.sg.flooringorders.ui.UserIOConsoleImpl"/>
   <bean id="view" class="com.sg.flooringorders.ui.FlooringOrdersView">
       <constructor-arg ref="userIO"/>
   </bean>
   <bean id="dao" class="com.sg.flooringorders.dao.FlooringOrdersDaoFileImpl">
       <property name="mode" value="PROD"/>
   </bean>
   <bean id="daoTest" class="com.sg.flooringorders.dao.FlooringOrdersDaoFileImpl">
       <property name="mode" value="TEST"/>
   </bean>
   <bean id="daoTraining" class="com.sg.flooringorders.dao.FlooringOrdersDaoFileImpl">
       <property name="mode" value="TRAINING"/>
   </bean>
   <bean id="auditDao" class="com.sg.flooringorders.dao.FlooringOrdersAuditDaoFileImpl"/> 
   <bean id="serviceLayer" class="com.sg.flooringorders.service.FlooringOrdersServiceLayerImpl">
       <constructor-arg ref="dao"/>
   </bean>
   <bean id="serviceLayerTest" class="com.sg.flooringorders.service.FlooringOrdersServiceLayerImpl">
       <constructor-arg ref="daoTest"/>
   </bean>
   <bean id="serviceLayerTraining" class="com.sg.flooringorders.service.FlooringOrdersServiceLayerImpl">
       <constructor-arg ref="daoTraining"/>
   </bean>
   <bean id="controller" class="com.sg.flooringorders.controller.FlooringOrdersController">
       <constructor-arg ref="view"/>
       <constructor-arg ref="serviceLayer"/>
   </bean>
   <bean id="controllerTest" class="com.sg.flooringorders.controller.FlooringOrdersController">
       <constructor-arg ref="view"/>
       <constructor-arg ref="serviceLayerTest"/>
   </bean>
   <bean id="controllerTraining" class="com.sg.flooringorders.controller.FlooringOrdersController">
       <constructor-arg ref="view"/>
       <constructor-arg ref="serviceLayerTraining"/>
   </bean>
   
   <bean id="loggingAdvice" class="com.sg.flooringorders.advice.FlooringOrdersLoggingAdvice">
       <constructor-arg ref="auditDao"/>
   </bean>
   
   <aop:config>
        
        <aop:aspect ref="loggingAdvice">
            <aop:after-throwing
                method="createErrorAuditEntry"
                pointcut="execution(* com.sg.flooringorders.service.FlooringOrdersServiceLayerImpl.*(..))"
                throwing="ex"
             />
            
            <aop:after-returning
                method="createOrderAuditEntry"
                pointcut="execution(* com.sg.flooringorders.service.FlooringOrdersServiceLayerImpl.addOrder(..))"
                returning="retVal"
             />
            
            <aop:after-returning
                method="createOrderAuditEntry"
                pointcut="execution(* com.sg.flooringorders.service.FlooringOrdersServiceLayerImpl.editOrder(..))"
                returning="retVal"
             />
            
            <aop:after-returning
                method="createOrderAuditEntry"
                pointcut="execution(* com.sg.flooringorders.service.FlooringOrdersServiceLayerImpl.removeOrder(..))"
                returning="retVal"
             />
            
            
        </aop:aspect>
        
            
    </aop:config>
</beans>
